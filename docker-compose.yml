services:
  # Caddy reverse proxy with SSL
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/dmb/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - /opt/dmb/site:/srv/dmb/site:ro
      - /opt/dmb/certs:/etc/certs:ro
    environment:
      - ACME_AGREE=true
    depends_on:
      - cal

  # Astro website
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - redis

  # Cal.com instance
  cal:
    image: calcom/cal.com:latest
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - DATABASE_URL=postgresql://cal:calpass@postgres:5432/cal
      - NEXTAUTH_URL=https://dmitrybond.tech
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - CALCOM_TELEMETRY_DISABLED=1
      - NODE_ENV=production
    env_file:
      - ./cal/.env
    depends_on:
      - postgres
      - redis

  # PostgreSQL database for Cal.com
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: cal
      POSTGRES_USER: cal
      POSTGRES_PASSWORD: calpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cal"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  caddy_data:
  caddy_config:
  postgres_data:
  redis_data:

networks:
  default:
    name: dmitrybond-network